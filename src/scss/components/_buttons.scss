/*
Buttons
Added in: v0.0.1
*/
@import "../core/variables/variables";
@import "../core/mixins/mixins";

@keyframes loadingRotate {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }

  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}


// Variables, Mixins
$btn_border_radius: $base_border_radius;
$btn_transition: $base_transition;

$btn_small_padding: $base_elem_small_padding;
$btn_normal_padding: $base_elem_normal_padding;
$btn_large_padding: $base_elem_large_padding;

$btn_focus_shadow: $base_elem_focus_shadow;
$btn_focus_opacity: $base_elem_focus_opacity;
$btn_disabled_opacity: $base_elem_disabled_opacity;

$btn_shadow_opacity: .4;
$btn_shadow_regular: 0 5px 8px;
$btn_shadow_hover: 0 2px 3px;
$btn_shadow_active: 0 1px 1px;

@mixin btnIsBlock() {
  display: block;
  width: 100%;
}

@mixin btnIsSmall() {
  font-size: .8rem;
  padding: $btn_small_padding;
}

@mixin btnIsLarge() {
  font-size: 1.2rem;
  padding: $btn_large_padding;
}

// Style
.btn {
  display: inline-block;
  position: relative;
  font-size: 1rem;
  background-color: $light;
  color: $dark;
  border: none;
  padding: $btn_normal_padding;
  border-radius: $btn_border_radius;
  box-shadow: $btn_shadow_regular rgba($light, $btn_shadow_opacity);
  transition: $btn_transition;
  text-align: center;
  cursor: pointer;
  word-break: break-word;

  &:hover {
    background-color: lighten($light, 3%);
    box-shadow: $btn_shadow_hover rgba($light, $btn_shadow_opacity);
  }

  &:active {
    background-color: darken($light, 3%);
    box-shadow: $btn_shadow_active rgba($light, $btn_shadow_opacity);
  }

  &:focus {
    box-shadow: $btn_focus_shadow rgba($light, $btn_focus_opacity);
  }
  &:hover,
  &:active,
  &:focus {
    outline: none;
    text-decoration: none;
  }

  &.is-outline {
    background-color: rgba($light, .12);
    box-shadow: none;
    color: $dark;
    border: 1px solid $light;

    &:hover {
      background-color: rgba($light, .08);
    }

    &:active {
      background-color: rgba($light, .2);
    }

    &:focus {
      box-shadow: $btn_focus_shadow rgba($light, $btn_focus_opacity);
    }

    &.is-loading {
      &::after {
        border: 2px solid $light;
        border-top-color: rgba($dark, .4);
      }
    }
  }

  &.is-small {
    @include btnIsSmall;
  }

  &.is-large {
    @include btnIsLarge;
  }

  &[disabled] {
    opacity: $btn_disabled_opacity;
    box-shadow: none !important;
    cursor: not-allowed;
    pointer-events: none;
  }

  &.is-loading {
    color: transparent !important;

    &::after {
      content: '';
      width: 1.25em;
      height: 1.25em;
      position: absolute;
      border: 2px solid rgba($dark, .3);
      border-top-color: $dark;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border-radius: 50%;
      animation: loadingRotate .4s linear infinite;
    }
  }

  &.is-block {
    @include btnIsBlock;
  }

  &:not(a):not(button):not(input[type="submit"]):not(input[type="reset"]) {
    pointer-events: none;
  }

  @each $name, $color in $colors {
    &.is-#{$name} {
      background-color: $color;
      box-shadow: $btn_shadow_regular rgba($color, $btn_shadow_opacity);
      color: #fff;

      &:hover {
        background-color: lighten($color, 3%);
        box-shadow: $btn_shadow_hover rgba($color, $btn_shadow_opacity);
      }

      &:active {
        background-color: darken($color, 3%);
        box-shadow: $btn_shadow_active rgba($color, $btn_shadow_opacity);
      }

      &:focus {
        box-shadow: $btn_focus_shadow rgba($color, $btn_focus_opacity);
      }

      &.is-loading {
        &::after {
          border: 2px solid rgba(#fff, .3);
          border-top-color: #fff;
        }
      }
    }
    &.is-outline-#{$name} {
      background-color: rgba($color, .12);
      box-shadow: none;
      color: $color;
      border: 1px solid rgba($color, .3);

      &:hover {
        background-color: rgba($color, .08);
      }

      &:active {
        background-color: rgba($color, .2);
      }

      &:focus {
        box-shadow: $btn_focus_shadow rgba($color, $btn_focus_opacity);
      }

      &.is-loading {
        &::after {
          border: 2px solid rgba($color, .3);
          border-top-color: $color;
        }
      }
    }
  }

}

// Responsive
@include generate-responsive('.btn.is-block') {
  @include btnIsBlock;
}

@include generate-responsive('.btn.is-small') {
  @include btnIsSmall;
}

@include generate-responsive('.btn.is-large') {
  @include btnIsLarge;
}
